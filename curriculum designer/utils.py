from io import BytesIO
import numpy as np
import skimage as sk
from skimage.filters import gaussian
from scipy.ndimage import zoom as scizoom
import cv2
from PIL import Image as PILImage


class Noise:
    def __init__(self):
        pass

    @staticmethod
    def pixelate(x, severity=2):
        c = [0.6, 0.5, 0.4, 0.3, 0.25][severity - 1]

        x = x.resize((int(224 * c), int(224 * c)), PILImage.BOX)
        x = x.resize((224, 224), PILImage.BOX)

        return x

    @staticmethod
    def contrast(x, severity=2):
        c = [0.4, 0.3, 0.2, 0.1, 0.05][severity - 1]

        x = np.array(x) / 255
        means = np.mean(x, axis=(0, 1), keepdims=True)

        return PILImage.fromarray(
            np.uint8(np.clip((x - means) * c + means, 0, 1) * 255)
        )

    @staticmethod
    def brightness(x, severity=2):
        c = [.1, .2, .3, .4, .5][severity - 1]

        x = np.array(x) / 255.
        x = sk.color.rgb2hsv(x)
        x[:, :, 2] = np.clip(x[:, :, 2] + c, 0, 1)
        x = sk.color.hsv2rgb(x)

        return PILImage.fromarray(
            np.uint8(np.clip(x, 0, 1) * 255)
        )

    @staticmethod
    def saturate(x, severity=2):
        c = [(0.3, 0), (0.1, 0), (2, 0), (5, 0.1), (20, 0.2)][severity - 1]

        x = np.array(x) / 255.
        x = sk.color.rgb2hsv(x)
        x[:, :, 1] = np.clip(x[:, :, 1] * c[0] + c[1], 0, 1)
        x = sk.color.hsv2rgb(x)

        return PILImage.fromarray(
            np.uint8(np.clip(x, 0, 1) * 255)
        )

    @staticmethod
    def impulse_noise(x, severity=2):
        c = [.03, .06, .09, 0.17, 0.27][severity - 1]

        x = sk.util.random_noise(np.array(x) / 255., mode='s&p', amount=c)
        return PILImage.fromarray(
            np.uint8(np.clip(x, 0, 1) * 255)
        )

    @staticmethod
    def shot_noise(x, severity=2):
        c = [60, 25, 12, 5, 3][severity - 1]

        x = np.array(x) / 255.
        return PILImage.fromarray(
            np.uint8(np.clip(np.random.poisson(x * c) / float(c), 0, 1) * 255)
        )

    @staticmethod
    def gaussian_noise(x, severity=2):
        c = [.08, .12, 0.18, 0.26, 0.38][severity - 1]

        x = np.array(x) / 255.
        return PILImage.fromarray(
            np.uint8(np.clip(x + np.random.normal(size=x.shape, scale=c), 0, 1) * 255)
        )

    @staticmethod
    def defocus_blur(x, severity=2):
        def disk(radius, alias_blur=0.1, dtype=np.float32):
            if radius <= 8:
                L = np.arange(-8, 8 + 1)
                ksize = (3, 3)
            else:
                L = np.arange(-radius, radius + 1)
                ksize = (5, 5)
            X, Y = np.meshgrid(L, L)
            aliased_disk = np.array((X ** 2 + Y ** 2) <= radius ** 2, dtype=dtype)
            aliased_disk /= np.sum(aliased_disk)

            # super sample disk to anti-alias
            return cv2.GaussianBlur(aliased_disk, ksize=ksize, sigmaX=alias_blur)

        c = [(3, 0.1), (4, 0.5), (6, 0.5), (8, 0.5), (10, 0.5)][severity - 1]

        x = np.array(x) / 255.
        kernel = disk(radius=c[0], alias_blur=c[1])

        channels = []
        for d in range(3):
            channels.append(cv2.filter2D(x[:, :, d], -1, kernel))
        channels = np.array(channels).transpose((1, 2, 0))  # 3x224x224 -> 224x224x3

        return PILImage.fromarray(
            np.uint8(np.clip(channels, 0, 1) * 255)
        )

    @staticmethod
    def speckle_noise(x, severity=2):
        c = [.15, .2, 0.35, 0.45, 0.6][severity - 1]

        x = np.array(x) / 255
        return PILImage.fromarray(
            np.uint8(np.clip(x + x * np.random.normal(size=x.shape, scale=c), 0, 1) * 255)
        )

    @staticmethod
    def gaussian_blur(x, severity=2):
        c = [1, 2, 3, 4, 6][severity - 1]

        x = gaussian(np.array(x) / 255., sigma=c, multichannel=True)
        return PILImage.fromarray(
            np.uint8(np.clip(x, 0, 1) * 255)
        )

inet_classes = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    26,
    27,
    28,
    30,
    32,
    33,
    34,
    35,
    36,
    38,
    39,
    40,
    41,
    42,
    44,
    46,
    47,
    48,
    50,
    51,
    53,
    54,
    56,
    57,
    58,
    59,
    60,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    70,
    71,
    72,
    73,
    74,
    76,
    77,
    78,
    79,
    80,
    81,
    82,
    83,
    84,
    85,
    86,
    87,
    89,
    90,
    92,
    93,
    94,
    95,
    96,
    97,
    98,
    99,
    100,
    101,
    102,
    103,
    104,
    105,
    106,
    107,
    108,
    109,
    110,
    112,
    113,
    115,
    116,
    117,
    118,
    119,
    120,
    121,
    122,
    123,
    124,
    125,
    126,
    128,
    129,
    130,
    131,
    132,
    133,
    134,
    135,
    136,
    137,
    138,
    139,
    140,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    150,
    151,
    152,
    153,
    154,
    155,
    157,
    158,
    159,
    161,
    162,
    163,
    164,
    165,
    166,
    167,
    169,
    170,
    171,
    172,
    173,
    174,
    175,
    176,
    177,
    178,
    179,
    180,
    181,
    182,
    183,
    184,
    185,
    187,
    188,
    189,
    190,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    198,
    199,
    200,
    201,
    202,
    203,
    204,
    205,
    206,
    207,
    208,
    209,
    211,
    212,
    213,
    214,
    215,
    216,
    217,
    218,
    219,
    220,
    221,
    222,
    223,
    224,
    225,
    226,
    227,
    229,
    230,
    233,
    234,
    235,
    237,
    238,
    239,
    240,
    241,
    242,
    243,
    244,
    245,
    246,
    247,
    248,
    249,
    250,
    251,
    252,
    253,
    254,
    255,
    256,
    257,
    258,
    259,
    260,
    261,
    262,
    263,
    264,
    265,
    266,
    268,
    269,
    270,
    271,
    272,
    273,
    274,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    285,
    287,
    288,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    296,
    297,
    298,
    299,
    300,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    311,
    312,
    313,
    314,
    317,
    318,
    319,
    320,
    322,
    323,
    324,
    325,
    326,
    327,
    328,
    329,
    330,
    331,
    332,
    333,
    334,
    335,
    337,
    339,
    340,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    351,
    353,
    355,
    356,
    357,
    358,
    359,
    360,
    361,
    363,
    364,
    365,
    366,
    368,
    369,
    370,
    371,
    372,
    373,
    375,
    376,
    377,
    378,
    379,
    380,
    381,
    382,
    383,
    386,
    387,
    388,
    391,
    392,
    393,
    394,
    395,
    396,
    397,
    398,
    399,
    400,
    401,
    402,
    403,
    404,
    405,
    406,
    407,
    410,
    411,
    412,
    413,
    414,
    415,
    416,
    417,
    419,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    428,
    429,
    430,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    440,
    441,
    442,
    443,
    444,
    445,
    446,
    447,
    448,
    449,
    450,
    451,
    452,
    453,
    454,
    455,
    457,
    458,
    459,
    460,
    461,
    462,
    465,
    466,
    467,
    468,
    469,
    470,
    471,
    472,
    473,
    474,
    476,
    477,
    478,
    479,
    480,
    481,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491,
    492,
    493,
    494,
    496,
    497,
    498,
    499,
    501,
    502,
    503,
    504,
    505,
    507,
    508,
    509,
    510,
    511,
    512,
    513,
    514,
    515,
    516,
    517,
    518,
    519,
    520,
    522,
    524,
    525,
    526,
    527,
    528,
    529,
    530,
    531,
    532,
    533,
    534,
    535,
    536,
    537,
    538,
    539,
    540,
    541,
    542,
    543,
    544,
    545,
    546,
    547,
    548,
    549,
    550,
    551,
    552,
    553,
    554,
    555,
    556,
    557,
    558,
    559,
    560,
    561,
    563,
    564,
    565,
    566,
    567,
    568,
    569,
    570,
    571,
    572,
    573,
    574,
    576,
    577,
    578,
    579,
    581,
    583,
    584,
    585,
    587,
    588,
    589,
    590,
    591,
    592,
    593,
    594,
    595,
    596,
    597,
    598,
    599,
    600,
    601,
    602,
    603,
    604,
    606,
    607,
    608,
    609,
    610,
    611,
    612,
    614,
    615,
    616,
    617,
    618,
    619,
    620,
    621,
    622,
    623,
    624,
    625,
    626,
    627,
    628,
    629,
    630,
    631,
    632,
    633,
    634,
    635,
    636,
    637,
    638,
    639,
    640,
    641,
    642,
    643,
    645,
    646,
    647,
    648,
    649,
    650,
    651,
    652,
    653,
    654,
    656,
    657,
    658,
    660,
    661,
    662,
    663,
    664,
    665,
    667,
    668,
    669,
    670,
    672,
    674,
    675,
    676,
    677,
    678,
    679,
    680,
    681,
    682,
    683,
    684,
    685,
    686,
    687,
    688,
    689,
    690,
    691,
    693,
    694,
    695,
    697,
    698,
    699,
    700,
    701,
    702,
    704,
    705,
    706,
    707,
    709,
    710,
    711,
    712,
    713,
    714,
    715,
    716,
    717,
    718,
    719,
    720,
    721,
    722,
    723,
    724,
    725,
    726,
    727,
    728,
    729,
    730,
    731,
    732,
    733,
    734,
    735,
    737,
    738,
    739,
    740,
    742,
    743,
    744,
    745,
    746,
    747,
    748,
    749,
    750,
    751,
    752,
    753,
    754,
    755,
    756,
    758,
    759,
    760,
    761,
    762,
    763,
    764,
    765,
    766,
    767,
    769,
    770,
    771,
    772,
    773,
    774,
    775,
    776,
    777,
    778,
    779,
    780,
    782,
    783,
    784,
    785,
    786,
    787,
    788,
    789,
    790,
    791,
    792,
    793,
    795,
    796,
    798,
    799,
    800,
    801,
    802,
    803,
    804,
    805,
    806,
    807,
    808,
    809,
    810,
    811,
    812,
    813,
    814,
    815,
    816,
    817,
    818,
    819,
    821,
    822,
    823,
    824,
    825,
    826,
    827,
    828,
    829,
    831,
    832,
    833,
    834,
    835,
    836,
    837,
    838,
    839,
    840,
    841,
    842,
    843,
    844,
    845,
    846,
    847,
    848,
    849,
    850,
    851,
    852,
    853,
    854,
    856,
    858,
    859,
    860,
    861,
    862,
    863,
    864,
    865,
    866,
    867,
    869,
    870,
    871,
    872,
    873,
    874,
    875,
    876,
    877,
    878,
    879,
    880,
    881,
    882,
    883,
    884,
    885,
    886,
    887,
    888,
    890,
    891,
    892,
    893,
    894,
    895,
    896,
    897,
    898,
    899,
    900,
    902,
    903,
    904,
    905,
    907,
    908,
    909,
    910,
    911,
    912,
    913,
    914,
    915,
    916,
    917,
    918,
    919,
    920,
    921,
    922,
    923,
    924,
    925,
    926,
    927,
    928,
    929,
    930,
    931,
    932,
    933,
    934,
    935,
    936,
    937,
    938,
    939,
    940,
    941,
    942,
    943,
    944,
    945,
    947,
    949,
    950,
    951,
    952,
    953,
    954,
    955,
    956,
    957,
    958,
    959,
    960,
    961,
    962,
    963,
    964,
    965,
    967,
    968,
    969,
    971,
    972,
    973,
    974,
    976,
    978,
    979,
    980,
    981,
    982,
    983,
    984,
    985,
    986,
    987,
    988,
    989,
    990,
    991,
    992,
    993,
    994,
    995,
    996,
    997,
    998,
    999
]